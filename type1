from tkinter import *
import random
import time


def next_turn(row, column):

    global player,x_time,o_time,start_time,k
    if x_time == 0:
        label.config(text=(players[0]+"'s time is over.So "+players[1] + " wins"))
    elif o_time ==0:
        label.config(text=(players[1]+"'s time is over.So "+players[0] + " wins"))

    if buttons[row][column]['text'] == "" and check_winner() is False and x_time !=0 and o_time !=0:

        if player == players[0]:
            buttons[row][column]['text'] = player

            if check_winner() is False and x_time !=0 :
                player = players[1]
               # label.config(text=f"{player}'s turn. You have {o_time // 60}:{o_time % 60} remaining.")

            elif check_winner() is True or o_time==0:
                label.config(text=(players[0]+" wins"))
                k=1

            elif check_winner() == "Tie":
                label.config(text="Tie!")
                k=1

        else:

            buttons[row][column]['text'] = player

            if check_winner() is False and o_time!=0:
                player = players[0]
               # label.config(text=f"{player}'s turn. You have {x_time // 60}:{x_time % 60} remaining.")

            elif check_winner() is True or x_time == 0 :
                label.config(text=(players[1]+" wins"))
                k=1


            elif check_winner() == "Tie":
                label.config(text="Tie!")
                k=1
   # update_timers_display()

def update_timers_display():
    global player, x_time, o_time, start_time,k
    if player == players[0]:
        x_time-=1
        label.config(text=f"{player}'s turn. You have {x_time // 60}:{x_time % 60} remaining.")
    else:
        o_time-=1
        label.config(text=f"{player}'s turn. You have {o_time // 60}:{o_time % 60} remaining.")
    if x_time == 0:
        label.config(text=(players[0] + "'s time is over.So " + players[1] + " wins"))
        k=1
    elif o_time == 0:
        label.config(text=(players[1] + "'s time is over.So " + players[0] + " wins"))
        k=1
    if k==0:
        timer_label.config(
            text=f"{players[0]}: {x_time // 60}:{x_time % 60}  {players[1]}: {o_time // 60}:{o_time % 60}")
        window.after(1000, update_timers_display)  # Update every 1000 milliseconds (1 second)
    else:
        timer_label.config(
            text=f"{players[0]}: {x_time // 60}:{x_time % 60}  {players[1]}: {o_time // 60}:{o_time % 60}")


def check_winner():

    for row in range(3):
        if buttons[row][0]['text'] == buttons[row][1]['text'] == buttons[row][2]['text'] != "":
            buttons[row][0].config(bg="green")
            buttons[row][1].config(bg="green")
            buttons[row][2].config(bg="green")
            return True

    for column in range(3):
        if buttons[0][column]['text'] == buttons[1][column]['text'] == buttons[2][column]['text'] != "":
            buttons[0][column].config(bg="green")
            buttons[1][column].config(bg="green")
            buttons[2][column].config(bg="green")
            return True

    if buttons[0][0]['text'] == buttons[1][1]['text'] == buttons[2][2]['text'] != "":
        buttons[0][0].config(bg="green")
        buttons[1][1].config(bg="green")
        buttons[2][2].config(bg="green")
        return True

    elif buttons[0][2]['text'] == buttons[1][1]['text'] == buttons[2][0]['text'] != "":
        buttons[0][2].config(bg="green")
        buttons[1][1].config(bg="green")
        buttons[2][0].config(bg="green")
        return True

    elif empty_spaces() is False:

        for row in range(3):
            for column in range(3):
                buttons[row][column].config(bg="yellow")
        return "Tie"

    else:
        return False


def empty_spaces():

    spaces = 9

    for row in range(3):
        for column in range(3):
            if buttons[row][column]['text'] != "":
                spaces -= 1

    if spaces == 0:
        return False
    else:
        return True

def new_game():

    global player

    player = "x"
    global x_time,o_time,start_time,k
    k=0
    x_time = 120
    o_time = 120
    start_time = time.time()
    label.config(text=f"{player}'s turn. You have {x_time // 60}:{x_time % 60} remaining.")
    timer_label.config(text=f"{players[0]}: {x_time // 60}:{x_time % 60}  {players[1]}: {o_time // 60}:{o_time % 60}",
                        font=('consolas', 15))
    if k == 0:
        update_timers_display()
    else:
        timer_label.config(
            text=f"{players[0]}: {x_time // 60}:{x_time % 60}  {players[1]}: {o_time // 60}:{o_time % 60}")

    for row in range(3):
        for column in range(3):
            buttons[row][column].config(text="",bg="#F0F0F0")


window = Tk()
window.title("Tic-Tac-Toe")
players = ["x","o"]
player = "x"
global x_time,o_time,k
k=0
x_time=120
o_time=120
start_time=time.time()
buttons = [[0,0,0],
           [0,0,0],
           [0,0,0]]
label = Label(text=f"{player}'s turn. You have {x_time // 60}:{x_time % 60} remaining.",font=('consolas',25))
label.pack(side="top")
timer_label = Label(text=f"{players[0]}: {x_time // 60}:{x_time % 60}  {players[1]}: {o_time // 60}:{o_time % 60}",
                    font=('consolas', 15))
timer_label.pack(side="top")
reset_button = Button(text="restart", font=('consolas',20), command=new_game)
reset_button.pack(side="top")

frame = Frame(window)
frame.pack()

for row in range(3):
    for column in range(3):
        buttons[row][column] = Button(frame, text="",font=('consolas',30), width=5, height=2,
                                      command= lambda row=row, column=column: next_turn(row,column))
        buttons[row][column].grid(row=row,column=column)
if k == 0:
    update_timers_display()
else:
    timer_label.config(
        text=f"{players[0]}: {x_time // 60}:{x_time % 60}  {players[1]}: {o_time // 60}:{o_time % 60}")
window.mainloop()
